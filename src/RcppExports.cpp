// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// tc2iqlrvar_internal
Eigen::MatrixXd tc2iqlrvar_internal(Eigen::MatrixXd Sigma, int D1, int D2, double qLow1, double qHigh1, double qLow2, double qHigh2);
RcppExport SEXP _TeacupCerberus_tc2iqlrvar_internal(SEXP SigmaSEXP, SEXP D1SEXP, SEXP D2SEXP, SEXP qLow1SEXP, SEXP qHigh1SEXP, SEXP qLow2SEXP, SEXP qHigh2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< int >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< int >::type D2(D2SEXP);
    Rcpp::traits::input_parameter< double >::type qLow1(qLow1SEXP);
    Rcpp::traits::input_parameter< double >::type qHigh1(qHigh1SEXP);
    Rcpp::traits::input_parameter< double >::type qLow2(qLow2SEXP);
    Rcpp::traits::input_parameter< double >::type qHigh2(qHigh2SEXP);
    rcpp_result_gen = Rcpp::wrap(tc2iqlrvar_internal(Sigma, D1, D2, qLow1, qHigh1, qLow2, qHigh2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TeacupCerberus_tc2iqlrvar_internal", (DL_FUNC) &_TeacupCerberus_tc2iqlrvar_internal, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_TeacupCerberus(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
